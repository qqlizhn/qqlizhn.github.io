{"version":3,"file":"static/chunks/pages/framebuffer-52a9906be9ae1f78.js","mappings":"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","sources":["webpack://_N_E/?7cce","webpack://_N_E/./src/pages/framebuffer.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/framebuffer\",\n      function () {\n        return require(\"private-next-pages/framebuffer.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/framebuffer\"])\n      });\n    }\n  ","import { ICommandBarItemProps, Stack } from \"@fluentui/react\";\nimport { AdbFrameBuffer, AdbFrameBufferV2 } from \"@yume-chan/adb\";\nimport { action, autorun, computed, makeAutoObservable } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { CommandBar, DemoModePanel, DeviceView } from \"../components\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { Icons, RouteStackProps } from \"../utils\";\n\nclass FrameBufferState {\n    width = 0;\n    height = 0;\n    imageData: ImageData | undefined = undefined;\n    demoModeVisible = false;\n\n    constructor() {\n        makeAutoObservable(this, {\n            toggleDemoModeVisible: action.bound,\n        });\n    }\n\n    setImage(image: AdbFrameBuffer) {\n        this.width = image.width;\n        this.height = image.height;\n        this.imageData = new ImageData(\n            new Uint8ClampedArray(image.data),\n            image.width,\n            image.height\n        );\n    }\n\n    toggleDemoModeVisible() {\n        this.demoModeVisible = !this.demoModeVisible;\n    }\n}\n\nconst state = new FrameBufferState();\n\nconst FrameBuffer: NextPage = (): JSX.Element | null => {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n    const capture = useCallback(async () => {\n        if (!GLOBAL_STATE.device) {\n            return;\n        }\n\n        try {\n            const start = Date.now();\n            const framebuffer = await GLOBAL_STATE.device.framebuffer();\n            console.log(\n                \"Framebuffer speed\",\n                (\n                    (((AdbFrameBufferV2.size + framebuffer.size) /\n                        (Date.now() - start)) *\n                        1000) /\n                    1024 /\n                    1024\n                ).toFixed(2),\n                \"MB/s\"\n            );\n            state.setImage(framebuffer);\n        } catch (e: any) {\n            GLOBAL_STATE.showErrorDialog(e);\n        }\n    }, []);\n\n    useEffect(() => {\n        return autorun(() => {\n            const canvas = canvasRef.current;\n            if (canvas && state.imageData) {\n                canvas.width = state.width;\n                canvas.height = state.height;\n                const context = canvas.getContext(\"2d\")!;\n                context.putImageData(state.imageData, 0, 0);\n            }\n        });\n    }, []);\n\n    const commandBarItems = computed(() => [\n        {\n            key: \"start\",\n            disabled: !GLOBAL_STATE.device,\n            iconProps: {\n                iconName: Icons.Camera,\n                style: { height: 20, fontSize: 20, lineHeight: 1.5 },\n            },\n            text: \"Capture\",\n            onClick: capture,\n        },\n        {\n            key: \"Save\",\n            disabled: !state.imageData,\n            iconProps: {\n                iconName: Icons.Save,\n                style: { height: 20, fontSize: 20, lineHeight: 1.5 },\n            },\n            text: \"Save\",\n            onClick: () => {\n                const canvas = canvasRef.current;\n                if (!canvas) {\n                    return;\n                }\n\n                const url = canvas.toDataURL();\n                const a = document.createElement(\"a\");\n                a.href = url;\n                a.download = `Screenshot of ${GLOBAL_STATE.backend!.name}.png`;\n                a.click();\n            },\n        },\n    ]);\n\n    const commandBarFarItems = computed((): ICommandBarItemProps[] => [\n        {\n            key: \"DemoMode\",\n            iconProps: {\n                iconName: Icons.Wand,\n                style: { height: 20, fontSize: 20, lineHeight: 1.5 },\n            },\n            checked: state.demoModeVisible,\n            text: \"Demo Mode\",\n            onClick: state.toggleDemoModeVisible,\n        },\n        {\n            key: \"info\",\n            iconProps: {\n                iconName: Icons.Info,\n                style: { height: 20, fontSize: 20, lineHeight: 1.5 },\n            },\n            iconOnly: true,\n            tooltipHostProps: {\n                content:\n                    \"Use ADB FrameBuffer command to capture a full-size, high-resolution screenshot.\",\n                calloutProps: {\n                    calloutMaxWidth: 250,\n                },\n            },\n        },\n    ]);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Screen Capture - Tango</title>\n            </Head>\n\n            <CommandBar\n                items={commandBarItems.get()}\n                farItems={commandBarFarItems.get()}\n            />\n            <Stack horizontal grow styles={{ root: { height: 0 } }}>\n                <DeviceView width={state.width} height={state.height}>\n                    <canvas ref={canvasRef} style={{ display: \"block\" }} />\n                </DeviceView>\n\n                <DemoModePanel\n                    style={{\n                        display: state.demoModeVisible ? \"block\" : \"none\",\n                    }}\n                />\n            </Stack>\n        </Stack>\n    );\n};\n\nexport default observer(FrameBuffer);\n"],"names":["window","__NEXT_P","push","__webpack_require__","state","setImage","image","width","height","imageData","ImageData","Uint8ClampedArray","data","toggleDemoModeVisible","demoModeVisible","constructor","undefined","makeAutoObservable","action","FrameBuffer","canvasRef","useRef","capture","useCallback","GLOBAL_STATE","start","Date","now","framebuffer","console","log","AdbFrameBufferV2","size","toFixed","e","useEffect","autorun","canvas","current","context","getContext","putImageData","commandBarItems","computed","key","disabled","iconProps","iconName","Icons","style","fontSize","lineHeight","text","onClick","url","toDataURL","a","document","createElement","href","download","concat","click","commandBarFarItems","checked","iconOnly","tooltipHostProps","content","calloutProps","calloutMaxWidth","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Stack","RouteStackProps","jsx","Head","title","CommandBar","items","get","farItems","horizontal","grow","styles","root","DeviceView","ref","display","DemoModePanel","__webpack_exports__","observer"],"sourceRoot":""}
{"version":3,"file":"static/chunks/692-2d03a11091f89eba.js","mappings":"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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.9_mj3jo2baq3jslihcop7oivercy/node_modules/@fluentui/utilities/lib/src/warn/warnControlledUsage.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.9_mj3jo2baq3jslihcop7oivercy/node_modules/@fluentui/utilities/src/controlled.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.9_mj3jo2baq3jslihcop7oivercy/node_modules/@fluentui/utilities/src/ie11Detector.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.108.1_g6eqzmexmujy3zvaqhkicj5z64/node_modules/@fluentui/react/lib/components/src/components/TextField/TextField.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.108.1_g6eqzmexmujy3zvaqhkicj5z64/node_modules/@fluentui/react/lib/components/src/components/TextField/TextField.styles.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.108.1_g6eqzmexmujy3zvaqhkicj5z64/node_modules/@fluentui/react/lib/components/src/components/TextField/TextField.ts","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.13.9_mj3jo2baq3jslihcop7oivercy/node_modules/@fluentui/utilities/src/DelayedRender.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { warn } from './warn';\nimport { isControlled as checkIsControlled } from '../controlled';\n\ntype WarningMap = { [id: string]: boolean };\n\nlet warningsMap: {\n  valueOnChange: WarningMap;\n  valueDefaultValue: WarningMap;\n  controlledToUncontrolled: WarningMap;\n  uncontrolledToControlled: WarningMap;\n};\nif (process.env.NODE_ENV !== 'production') {\n  warningsMap = {\n    valueOnChange: {},\n    valueDefaultValue: {},\n    controlledToUncontrolled: {},\n    uncontrolledToControlled: {},\n  };\n}\n\n/** Reset controlled usage warnings for testing purposes. */\nexport function resetControlledWarnings(): void {\n  if (process.env.NODE_ENV !== 'production') {\n    warningsMap.valueOnChange = {};\n    warningsMap.valueDefaultValue = {};\n    warningsMap.controlledToUncontrolled = {};\n    warningsMap.uncontrolledToControlled = {};\n  }\n}\n\nexport interface IWarnControlledUsageParams<P> {\n  /** ID of the component instance. Used to prevent showing warnings repeatedly. */\n  componentId: string;\n  /** Name of the component class. */\n  componentName: string;\n  /** Current props to evaluate. */\n  props: P;\n  /** Previous props to evaluate (undefined if called in the constructor). */\n  oldProps?: P;\n  /** Name of the prop for the controlled value. */\n  valueProp: keyof P;\n  /** Name of the prop for the uncontrolled initial value. */\n  defaultValueProp: keyof P;\n  /** Name of the change handler prop. */\n  onChangeProp: keyof P;\n  /** Name of the read-only prop. */\n  readOnlyProp?: keyof P;\n}\n\n/**\n * Check for and warn on the following error conditions with a form component:\n * - A value prop is provided (indicated it's being used as controlled) without a change handler,\n *    and the component is not read-only\n * - Both the value and defaultValue props are provided\n * - The component is attempting to switch between controlled and uncontrolled\n *\n * The messages mimic the warnings React gives for these error conditions on input elements.\n * The warning will only be displayed once per component ID.\n */\nexport function warnControlledUsage<P>(params: IWarnControlledUsageParams<P>): void {\n  if (process.env.NODE_ENV !== 'production') {\n    const { componentId, componentName, defaultValueProp, props, oldProps, onChangeProp, readOnlyProp, valueProp } =\n      params;\n\n    // This warning logic closely follows what React does for native <input> elements.\n\n    const oldIsControlled = oldProps ? checkIsControlled(oldProps, valueProp) : undefined;\n    const newIsControlled = checkIsControlled(props, valueProp);\n\n    if (newIsControlled) {\n      // onChange (or readOnly) must be provided if value is provided\n      const hasOnChange = !!props[onChangeProp];\n      const isReadOnly = !!(readOnlyProp && props[readOnlyProp]);\n      if (!(hasOnChange || isReadOnly) && !warningsMap.valueOnChange[componentId]) {\n        warningsMap.valueOnChange[componentId] = true;\n        warn(\n          `Warning: You provided a '${valueProp}' prop to a ${componentName} without an '${onChangeProp}' handler. ` +\n            `This will render a read-only field. If the field should be mutable use '${defaultValueProp}'. ` +\n            `Otherwise, set '${onChangeProp}'${readOnlyProp ? ` or '${readOnlyProp}'` : ''}.`,\n        );\n      }\n\n      // value and defaultValue are mutually exclusive\n      const defaultValue = props[defaultValueProp];\n      if (defaultValue !== undefined && defaultValue !== null && !warningsMap.valueDefaultValue[componentId]) {\n        warningsMap.valueDefaultValue[componentId] = true;\n        warn(\n          `Warning: You provided both '${valueProp}' and '${defaultValueProp}' to a ${componentName}. ` +\n            `Form fields must be either controlled or uncontrolled (specify either the '${valueProp}' prop, ` +\n            `or the '${defaultValueProp}' prop, but not both). Decide between using a controlled or uncontrolled ` +\n            `${componentName} and remove one of these props. More info: https://fb.me/react-controlled-components`,\n        );\n      }\n    }\n\n    // Warn if switching between uncontrolled and controlled. (One difference between this implementation\n    // and React's <input> is that if oldIsControlled is indeterminate and newIsControlled true, we don't warn.)\n    if (oldProps && newIsControlled !== oldIsControlled) {\n      const oldType = oldIsControlled ? 'a controlled' : 'an uncontrolled';\n      const newType = oldIsControlled ? 'uncontrolled' : 'controlled';\n      const warnMap = oldIsControlled ? warningsMap.controlledToUncontrolled : warningsMap.uncontrolledToControlled;\n      if (!warnMap[componentId]) {\n        warnMap[componentId] = true;\n        warn(\n          `Warning: A component is changing ${oldType} ${componentName} to be ${newType}. ` +\n            `${componentName}s should not switch from controlled to uncontrolled (or vice versa). ` +\n            `Decide between using controlled or uncontrolled for the lifetime of the component. ` +\n            `More info: https://fb.me/react-controlled-components`,\n        );\n      }\n    }\n  }\n}\n","/**\n * Determines whether a component is controlled.\n * @param props - Component props\n * @param valueProp - Prop containing the controlled value\n * @returns true if controlled, false if uncontrolled\n */\nexport function isControlled<P>(props: P, valueProp: keyof P): boolean {\n  // React's built-in <input> considers a prop to be provided if its value is non-null/undefined.\n  // Mirror that behavior here (rather than checking for just undefined).\n  return props[valueProp] !== undefined && props[valueProp] !== null;\n}\n","import { getWindow } from './dom/getWindow';\n\nexport const isIE11 = (): boolean => {\n  const win = getWindow();\n\n  if (!win?.navigator?.userAgent) {\n    return false;\n  }\n\n  return win.navigator.userAgent.indexOf('rv:11.0') > -1;\n};\n","import * as React from 'react';\nimport { Label } from '../../Label';\nimport { Icon } from '../../Icon';\nimport {\n  Async,\n  classNamesFunction,\n  DelayedRender,\n  getId,\n  getNativeProps,\n  getWindow,\n  initializeComponentRef,\n  inputProperties,\n  isControlled,\n  isIE11,\n  textAreaProperties,\n  warn,\n  warnControlledUsage,\n  warnMutuallyExclusive,\n} from '../../Utilities';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { ILabelStyleProps, ILabelStyles } from '../../Label';\nimport type { IStyleFunctionOrObject } from '../../Utilities';\nimport type { ITextField, ITextFieldProps, ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\n\nconst getClassNames = classNamesFunction<ITextFieldStyleProps, ITextFieldStyles>();\n\n/** @internal */\nexport interface ITextFieldState {\n  /** The currently displayed value if uncontrolled. */\n  uncontrolledValue: string | undefined;\n\n  /** Is true when the control has focus. */\n  isFocused?: boolean;\n\n  /**\n   * Dynamic error message returned by `onGetErrorMessage`.\n   * Use `this._errorMessage` to get the actual current error message.\n   */\n  errorMessage: string | JSX.Element;\n\n  /**\n   * Whether this field has `type='password'` and `canRevealPassword=true`, and the password is\n   * currently being revealed.\n   */\n  isRevealingPassword?: boolean;\n}\n\n/** @internal */\nexport interface ITextFieldSnapshot {\n  /**\n   * If set, the text field is changing between single- and multi-line, so we'll need to reset\n   * selection/cursor after the change completes.\n   */\n  selection?: [number | null, number | null];\n}\n\nconst DEFAULT_STATE_VALUE = '';\nconst COMPONENT_NAME = 'TextField';\n\nconst REVEAL_ICON_NAME = 'RedEye';\nconst HIDE_ICON_NAME = 'Hide';\n\nexport class TextFieldBase\n  extends React.Component<ITextFieldProps, ITextFieldState, ITextFieldSnapshot>\n  implements ITextField\n{\n  public static defaultProps: ITextFieldProps = {\n    resizable: true,\n    deferredValidationTime: 200,\n    validateOnLoad: true,\n  };\n\n  /** Fallback ID if none is provided in props. Access proper value via `this._id`. */\n  private _fallbackId: string;\n  private _descriptionId: string;\n  private _labelId: string;\n  private _prefixId: string;\n  private _suffixId: string;\n  private _delayedValidate: (value: string | undefined) => void;\n  private _lastValidation: number;\n  private _latestValidateValue: string | undefined;\n  private _hasWarnedNullValue: boolean | undefined;\n  private _textElement = React.createRef<HTMLTextAreaElement | HTMLInputElement>();\n  private _classNames: IProcessedStyleSet<ITextFieldStyles>;\n  private _async: Async;\n  /** Most recent value from a change or input event, to help avoid processing events twice */\n  private _lastChangeValue: string | undefined;\n\n  public constructor(props: ITextFieldProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnMutuallyExclusive(COMPONENT_NAME, props, {\n        errorMessage: 'onGetErrorMessage',\n      });\n    }\n\n    this._fallbackId = getId(COMPONENT_NAME);\n    this._descriptionId = getId(COMPONENT_NAME + 'Description');\n    this._labelId = getId(COMPONENT_NAME + 'Label');\n    this._prefixId = getId(COMPONENT_NAME + 'Prefix');\n    this._suffixId = getId(COMPONENT_NAME + 'Suffix');\n\n    this._warnControlledUsage();\n\n    let { defaultValue = DEFAULT_STATE_VALUE } = props;\n    if (typeof defaultValue === 'number') {\n      // This isn't allowed per the props, but happens anyway.\n      defaultValue = String(defaultValue);\n    }\n    this.state = {\n      uncontrolledValue: this._isControlled ? undefined : defaultValue,\n      isFocused: false,\n      errorMessage: '',\n    };\n\n    this._delayedValidate = this._async.debounce(this._validate, this.props.deferredValidationTime);\n    this._lastValidation = 0;\n  }\n\n  /**\n   * Gets the current value of the text field.\n   */\n  public get value(): string | undefined {\n    return _getValue(this.props, this.state);\n  }\n\n  public componentDidMount(): void {\n    this._adjustInputHeight();\n\n    if (this.props.validateOnLoad) {\n      this._validate(this.value);\n    }\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n  }\n\n  public getSnapshotBeforeUpdate(prevProps: ITextFieldProps, prevState: ITextFieldState): ITextFieldSnapshot | null {\n    return {\n      selection: [this.selectionStart, this.selectionEnd],\n    };\n  }\n\n  public componentDidUpdate(\n    prevProps: ITextFieldProps,\n    prevState: ITextFieldState,\n    snapshot: ITextFieldSnapshot,\n  ): void {\n    const props = this.props;\n    const { selection = [null, null] } = snapshot || {};\n    const [start, end] = selection;\n\n    if (!!prevProps.multiline !== !!props.multiline && prevState.isFocused) {\n      // The text field has just changed between single- and multi-line, so we need to reset focus\n      // and selection/cursor.\n      this.focus();\n      if (start !== null && end !== null && start >= 0 && end >= 0) {\n        this.setSelectionRange(start, end);\n      }\n    }\n\n    if (prevProps.value !== props.value) {\n      // Only if the value in props changed, reset the record of the last value seen by a\n      // change/input event (don't do this if the value in state changed, since at least in tests\n      // the state update may happen before the second event in a series)\n      this._lastChangeValue = undefined;\n    }\n\n    const prevValue = _getValue(prevProps, prevState);\n    const value = this.value;\n    if (prevValue !== value) {\n      // Handle controlled/uncontrolled warnings and status\n      this._warnControlledUsage(prevProps);\n\n      // Clear error message if needed\n      // TODO: is there any way to do this without an extra render?\n      if (this.state.errorMessage && !props.errorMessage) {\n        this.setState({ errorMessage: '' });\n      }\n\n      // Adjust height if needed based on new value\n      this._adjustInputHeight();\n\n      // TODO: #5875 added logic to trigger validation in componentWillReceiveProps and other places.\n      // This seems a bit odd and hard to integrate with the new approach.\n      // (Starting to think we should just put the validation logic in a separate wrapper component...?)\n      if (_shouldValidateAllChanges(props)) {\n        this._delayedValidate(value);\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      borderless,\n      className,\n      disabled,\n      invalid,\n      iconProps,\n      inputClassName,\n      label,\n      multiline,\n      required,\n      underlined,\n      prefix,\n      resizable,\n      suffix,\n      theme,\n      styles,\n      autoAdjustHeight,\n      canRevealPassword,\n      revealPasswordAriaLabel,\n      type,\n      onRenderPrefix = this._onRenderPrefix,\n      onRenderSuffix = this._onRenderSuffix,\n      onRenderLabel = this._onRenderLabel,\n      onRenderDescription = this._onRenderDescription,\n    } = this.props;\n    const { isFocused, isRevealingPassword } = this.state;\n    const errorMessage = this._errorMessage;\n    const isInvalid = typeof invalid === 'boolean' ? invalid : !!errorMessage;\n\n    const hasRevealButton = !!canRevealPassword && type === 'password' && _browserNeedsRevealButton();\n\n    const classNames = (this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      focused: isFocused,\n      required,\n      multiline,\n      hasLabel: !!label,\n      hasErrorMessage: isInvalid,\n      borderless,\n      resizable,\n      hasIcon: !!iconProps,\n      underlined,\n      inputClassName,\n      autoAdjustHeight,\n      hasRevealButton,\n    }));\n\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      <div ref={this.props.elementRef} className={classNames.root}>\n        <div className={classNames.wrapper}>\n          {onRenderLabel(this.props, this._onRenderLabel)}\n          <div className={classNames.fieldGroup}>\n            {(prefix !== undefined || this.props.onRenderPrefix) && (\n              <div className={classNames.prefix} id={this._prefixId}>\n                {onRenderPrefix(this.props, this._onRenderPrefix)}\n              </div>\n            )}\n            {multiline ? this._renderTextArea() : this._renderInput()}\n            {iconProps && <Icon className={classNames.icon} {...iconProps} />}\n            {hasRevealButton && (\n              // Explicitly set type=\"button\" since the default button type within a form is \"submit\"\n              <button\n                aria-label={revealPasswordAriaLabel}\n                className={classNames.revealButton}\n                onClick={this._onRevealButtonClick}\n                aria-pressed={!!isRevealingPassword}\n                type=\"button\"\n              >\n                <span className={classNames.revealSpan}>\n                  <Icon\n                    className={classNames.revealIcon}\n                    iconName={isRevealingPassword ? HIDE_ICON_NAME : REVEAL_ICON_NAME}\n                  />\n                </span>\n              </button>\n            )}\n            {(suffix !== undefined || this.props.onRenderSuffix) && (\n              <div className={classNames.suffix} id={this._suffixId}>\n                {onRenderSuffix(this.props, this._onRenderSuffix)}\n              </div>\n            )}\n          </div>\n        </div>\n        {this._isDescriptionAvailable && (\n          <span id={this._descriptionId}>\n            {onRenderDescription(this.props, this._onRenderDescription)}\n            {errorMessage && (\n              <div role=\"alert\">\n                <DelayedRender>{this._renderErrorMessage()}</DelayedRender>\n              </div>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus on the text field\n   */\n  public focus() {\n    if (this._textElement.current) {\n      this._textElement.current.focus();\n    }\n  }\n\n  /**\n   * Blurs the text field.\n   */\n  public blur() {\n    if (this._textElement.current) {\n      this._textElement.current.blur();\n    }\n  }\n\n  /**\n   * Selects the text field\n   */\n  public select() {\n    if (this._textElement.current) {\n      this._textElement.current.select();\n    }\n  }\n\n  /**\n   * Sets the selection start of the text field to a specified value\n   */\n  public setSelectionStart(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionStart = value;\n    }\n  }\n\n  /**\n   * Sets the selection end of the text field to a specified value\n   */\n  public setSelectionEnd(value: number): void {\n    if (this._textElement.current) {\n      this._textElement.current.selectionEnd = value;\n    }\n  }\n\n  /**\n   * Gets the selection start of the text field\n   */\n  public get selectionStart(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionStart : -1;\n  }\n\n  /**\n   * Gets the selection end of the text field\n   */\n  public get selectionEnd(): number | null {\n    return this._textElement.current ? this._textElement.current.selectionEnd : -1;\n  }\n\n  /**\n   * Sets the start and end positions of a selection in a text field.\n   * @param start - Index of the start of the selection.\n   * @param end - Index of the end of the selection.\n   */\n  public setSelectionRange(start: number, end: number): void {\n    if (this._textElement.current) {\n      (this._textElement.current as HTMLInputElement).setSelectionRange(start, end);\n    }\n  }\n\n  private _warnControlledUsage(prevProps?: ITextFieldProps): void {\n    // Show warnings if props are being used in an invalid way\n    warnControlledUsage({\n      componentId: this._id,\n      componentName: COMPONENT_NAME,\n      props: this.props,\n      oldProps: prevProps,\n      valueProp: 'value',\n      defaultValueProp: 'defaultValue',\n      onChangeProp: 'onChange',\n      readOnlyProp: 'readOnly',\n    });\n\n    if (this.props.value === null && !this._hasWarnedNullValue) {\n      this._hasWarnedNullValue = true;\n      warn(\n        `Warning: 'value' prop on '${COMPONENT_NAME}' should not be null. Consider using an ` +\n          'empty string to clear the component or undefined to indicate an uncontrolled component.',\n      );\n    }\n  }\n\n  /** Returns `props.id` if available, or a fallback if not. */\n  private get _id(): string {\n    return this.props.id || this._fallbackId;\n  }\n\n  private get _isControlled(): boolean {\n    return isControlled(this.props, 'value');\n  }\n\n  private _onFocus = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n\n    this.setState({ isFocused: true }, () => {\n      if (this.props.validateOnFocusIn) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n\n    this.setState({ isFocused: false }, () => {\n      if (this.props.validateOnFocusOut) {\n        this._validate(this.value);\n      }\n    });\n  };\n\n  private _onRenderLabel = (props: ITextFieldProps): JSX.Element | null => {\n    const { label, required } = props;\n    // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    if (label) {\n      return (\n        <Label required={required} htmlFor={this._id} styles={labelStyles} disabled={props.disabled} id={this._labelId}>\n          {props.label}\n        </Label>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderDescription = (props: ITextFieldProps): JSX.Element | null => {\n    if (props.description) {\n      return <span className={this._classNames.description}>{props.description}</span>;\n    }\n    return null;\n  };\n\n  private _onRenderPrefix(props: ITextFieldProps): JSX.Element {\n    const { prefix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{prefix}</span>;\n  }\n\n  private _onRenderSuffix(props: ITextFieldProps): JSX.Element {\n    const { suffix } = props;\n    return <span style={{ paddingBottom: '1px' }}>{suffix}</span>;\n  }\n\n  /**\n   * Current error message from either `props.errorMessage` or the result of `props.onGetErrorMessage`.\n   *\n   * - If there is no validation error or we have not validated the input value, errorMessage is an empty string.\n   * - If we have done the validation and there is validation error, errorMessage is the validation error message.\n   */\n  private get _errorMessage(): string | JSX.Element {\n    const { errorMessage = this.state.errorMessage } = this.props;\n    return errorMessage || '';\n  }\n\n  /**\n   * Renders error message based on the type of the message.\n   *\n   * - If error message is string, it will render using the built in styles.\n   * - If error message is an element, user has full control over how it's rendered.\n   */\n  private _renderErrorMessage(): JSX.Element | null {\n    const errorMessage = this._errorMessage;\n\n    return errorMessage ? (\n      typeof errorMessage === 'string' ? (\n        <p className={this._classNames.errorMessage}>\n          <span data-automation-id=\"error-message\">{errorMessage}</span>\n        </p>\n      ) : (\n        <div className={this._classNames.errorMessage} data-automation-id=\"error-message\">\n          {errorMessage}\n        </div>\n      )\n    ) : null;\n  }\n\n  /**\n   * If a custom description render function is supplied then treat description as always available.\n   * Otherwise defer to the presence of description or error message text.\n   */\n  private get _isDescriptionAvailable(): boolean {\n    const props = this.props;\n    return !!(props.onRenderDescription || props.description || this._errorMessage);\n  }\n\n  private _renderTextArea(): React.ReactElement<React.HTMLAttributes<HTMLAreaElement>> {\n    const { invalid = !!this._errorMessage } = this.props;\n    const textAreaProps = getNativeProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n      this.props,\n      textAreaProperties,\n      ['defaultValue'],\n    );\n    const ariaLabelledBy = this.props['aria-labelledby'] || (this.props.label ? this._labelId : undefined);\n    return (\n      <textarea\n        id={this._id}\n        {...textAreaProps}\n        ref={this._textElement as React.RefObject<HTMLTextAreaElement>}\n        value={this.value || ''}\n        onInput={this._onInputChange}\n        onChange={this._onInputChange}\n        className={this._classNames.field}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby']}\n        aria-invalid={invalid}\n        aria-label={this.props.ariaLabel}\n        readOnly={this.props.readOnly}\n        onFocus={this._onFocus}\n        onBlur={this._onBlur}\n      />\n    );\n  }\n\n  private _renderInput(): JSX.Element | null {\n    const {\n      ariaLabel,\n      invalid = !!this._errorMessage,\n      onRenderPrefix,\n      onRenderSuffix,\n      prefix,\n      suffix,\n      type = 'text',\n      label,\n    } = this.props;\n\n    // build aria-labelledby list from label, prefix, and suffix\n    const labelIds = [];\n    label && labelIds.push(this._labelId);\n    (prefix !== undefined || onRenderPrefix) && labelIds.push(this._prefixId);\n    (suffix !== undefined || onRenderSuffix) && labelIds.push(this._suffixId);\n\n    const inputProps: React.InputHTMLAttributes<HTMLInputElement> & React.RefAttributes<HTMLInputElement> = {\n      type: this.state.isRevealingPassword ? 'text' : type,\n      id: this._id,\n      ...getNativeProps(this.props, inputProperties, ['defaultValue', 'type']),\n      'aria-labelledby': this.props['aria-labelledby'] || (labelIds.length > 0 ? labelIds.join(' ') : undefined),\n      ref: this._textElement as React.RefObject<HTMLInputElement>,\n      value: this.value || '',\n      onInput: this._onInputChange,\n      onChange: this._onInputChange,\n      className: this._classNames.field,\n      'aria-label': ariaLabel,\n      'aria-describedby': this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'],\n      'aria-invalid': invalid,\n      onFocus: this._onFocus,\n      onBlur: this._onBlur,\n    };\n\n    const defaultRender = (updatedInputProps: React.InputHTMLAttributes<HTMLInputElement>) => {\n      return <input {...updatedInputProps} />;\n    };\n    const onRenderInput = this.props.onRenderInput || defaultRender;\n    return onRenderInput(inputProps, defaultRender);\n  }\n\n  private _onRevealButtonClick = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    this.setState(prevState => ({ isRevealingPassword: !prevState.isRevealingPassword }));\n  };\n\n  private _onInputChange = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    // Previously, we needed to call both onInput and onChange due to some weird IE/React issues,\n    // which have *probably* been fixed now:\n    // - https://github.com/microsoft/fluentui/issues/744 (likely fixed)\n    // - https://github.com/microsoft/fluentui/issues/824 (confirmed fixed)\n\n    // TODO (Fabric 8?) - Switch to calling only onChange. This switch is pretty disruptive for\n    // tests (ours and maybe consumers' too), so it seemed best to do the switch in a major bump.\n\n    const element = event.target as HTMLInputElement;\n    const value = element.value;\n    // Ignore this event if any of the following are true:\n    // - the value is undefined (in case one of the IE bugs comes back)\n    // - it's a duplicate event (important since onInputChange is called twice per actual user event)\n    // - it's the same as the previous value\n    const previousValue = _getValue(this.props, this.state) || '';\n    if (value === undefined || value === this._lastChangeValue || value === previousValue) {\n      this._lastChangeValue = undefined;\n      return;\n    }\n    this._lastChangeValue = value;\n\n    this.props.onChange?.(event, value);\n\n    if (!this._isControlled) {\n      // ONLY if this is an uncontrolled component, update the displayed value.\n      // (Controlled components must update the `value` prop from `onChange`.)\n      this.setState({ uncontrolledValue: value });\n    }\n  };\n\n  private _validate(value: string | undefined): void {\n    // In case _validate is called again while validation promise is executing\n    if (this._latestValidateValue === value && _shouldValidateAllChanges(this.props)) {\n      return;\n    }\n\n    this._latestValidateValue = value;\n    const onGetErrorMessage = this.props.onGetErrorMessage;\n    const result = onGetErrorMessage && onGetErrorMessage(value || '');\n\n    if (result !== undefined) {\n      if (typeof result === 'string' || !('then' in result)) {\n        this.setState({ errorMessage: result });\n        this._notifyAfterValidate(value, result);\n      } else {\n        const currentValidation: number = ++this._lastValidation;\n\n        result.then((errorMessage: string | JSX.Element) => {\n          if (currentValidation === this._lastValidation) {\n            this.setState({ errorMessage });\n          }\n          this._notifyAfterValidate(value, errorMessage);\n        });\n      }\n    } else {\n      this._notifyAfterValidate(value, '');\n    }\n  }\n\n  private _notifyAfterValidate(value: string | undefined, errorMessage: string | JSX.Element): void {\n    if (value === this.value && this.props.onNotifyValidationResult) {\n      this.props.onNotifyValidationResult(errorMessage, value);\n    }\n  }\n\n  private _adjustInputHeight(): void {\n    if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\n      const textField = this._textElement.current;\n      textField.style.height = '';\n      textField.style.height = textField.scrollHeight + 'px';\n    }\n  }\n}\n\n/** Get the value from the given state and props (converting from number to string if needed) */\nfunction _getValue(props: ITextFieldProps, state: ITextFieldState): string | undefined {\n  const { value = state.uncontrolledValue } = props;\n  if (typeof value === 'number') {\n    // not allowed per typings, but happens anyway\n    return String(value);\n  }\n  return value;\n}\n\n/**\n * If `validateOnFocusIn` or `validateOnFocusOut` is true, validation should run **only** on that event.\n * Otherwise, validation should run on every change.\n */\nfunction _shouldValidateAllChanges(props: ITextFieldProps): boolean {\n  return !(props.validateOnFocusIn || props.validateOnFocusOut);\n}\n\n// Only calculate this once across all TextFields, since will stay the same\nlet __browserNeedsRevealButton: boolean | undefined;\n\nfunction _browserNeedsRevealButton() {\n  if (typeof __browserNeedsRevealButton !== 'boolean') {\n    const win = getWindow();\n\n    if (win?.navigator) {\n      // Edge, Chromium Edge\n      const isEdge = /Edg/.test(win.navigator.userAgent || '');\n\n      __browserNeedsRevealButton = !(isIE11() || isEdge);\n    } else {\n      __browserNeedsRevealButton = true;\n    }\n  }\n  return __browserNeedsRevealButton;\n}\n","import {\n  AnimationClassNames,\n  getFocusStyle,\n  getGlobalClassNames,\n  getInputFocusStyle,\n  HighContrastSelector,\n  normalize,\n  getPlaceholderStyles,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport type { IStyle } from '../../Styling';\nimport type { ILabelStyles, ILabelStyleProps } from '../../Label';\nimport type { ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\nimport type { IStyleFunctionOrObject } from '@fluentui/utilities';\n\nconst globalClassNames = {\n  root: 'ms-TextField',\n  description: 'ms-TextField-description',\n  errorMessage: 'ms-TextField-errorMessage',\n  field: 'ms-TextField-field',\n  fieldGroup: 'ms-TextField-fieldGroup',\n  prefix: 'ms-TextField-prefix',\n  suffix: 'ms-TextField-suffix',\n  wrapper: 'ms-TextField-wrapper',\n  revealButton: 'ms-TextField-reveal',\n\n  multiline: 'ms-TextField--multiline',\n  borderless: 'ms-TextField--borderless',\n  underlined: 'ms-TextField--underlined',\n  unresizable: 'ms-TextField--unresizable',\n\n  required: 'is-required',\n  disabled: 'is-disabled',\n  active: 'is-active',\n};\n\nfunction getLabelStyles(props: ITextFieldStyleProps): IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles> {\n  const { underlined, disabled, focused, theme } = props;\n  const { palette, fonts } = theme;\n\n  return () => ({\n    root: [\n      underlined &&\n        disabled && {\n          color: palette.neutralTertiary,\n        },\n      underlined && {\n        fontSize: fonts.medium.fontSize,\n        marginRight: 8,\n        paddingLeft: 12,\n        paddingRight: 0,\n        lineHeight: '22px',\n        height: 32,\n      },\n      underlined &&\n        focused && {\n          selectors: {\n            [HighContrastSelector]: {\n              height: 31, // -1px to prevent jumpiness in HC with the increased border-width to 2px\n            },\n          },\n        },\n    ],\n  });\n}\n\nexport function getStyles(props: ITextFieldStyleProps): ITextFieldStyles {\n  const {\n    theme,\n    className,\n    disabled,\n    focused,\n    required,\n    multiline,\n    hasLabel,\n    borderless,\n    underlined,\n    hasIcon,\n    resizable,\n    hasErrorMessage,\n    inputClassName,\n    autoAdjustHeight,\n    hasRevealButton,\n  } = props;\n\n  const { semanticColors, effects, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const fieldPrefixSuffix: IStyle = {\n    // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n    background: semanticColors.disabledBackground,\n    color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 10px',\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    flexShrink: 0,\n    selectors: {\n      [HighContrastSelector]: {\n        background: 'Window',\n        color: disabled ? 'GrayText' : 'WindowText',\n      },\n    },\n  };\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = [\n    {\n      color: semanticColors.inputPlaceholderText,\n      opacity: 1,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  ];\n\n  const disabledPlaceholderStyles: IStyle = {\n    color: semanticColors.disabledText,\n    selectors: {\n      [HighContrastSelector]: {\n        color: 'GrayText',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      required && classNames.required,\n      disabled && classNames.disabled,\n      focused && classNames.active,\n      multiline && classNames.multiline,\n      borderless && classNames.borderless,\n      underlined && classNames.underlined,\n      normalize,\n      {\n        position: 'relative',\n      },\n      className,\n    ],\n    wrapper: [\n      classNames.wrapper,\n\n      underlined && [\n        {\n          display: 'flex',\n          borderBottom: `1px solid ${!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText}`,\n          width: '100%',\n        },\n        disabled && {\n          borderBottomColor: semanticColors.disabledBackground,\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderBottomColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n        focused && [\n          {\n            position: 'relative',\n          },\n          getInputFocusStyle(\n            !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n            0,\n            'borderBottom',\n          ),\n        ],\n      ],\n    ],\n    fieldGroup: [\n      classNames.fieldGroup,\n      normalize,\n      {\n        border: `1px solid ${semanticColors.inputBorder}`,\n        borderRadius: effects.roundedCorner2,\n        background: semanticColors.inputBackground,\n        cursor: 'text',\n        height: 32,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        position: 'relative',\n      },\n      multiline && {\n        minHeight: '60px',\n        height: 'auto',\n        display: 'flex',\n      },\n\n      !focused &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: semanticColors.inputBorderHovered,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n\n      focused &&\n        !underlined &&\n        getInputFocusStyle(\n          !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n          effects.roundedCorner2,\n        ),\n      disabled && {\n        borderColor: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n\n        cursor: 'default',\n      },\n      borderless && {\n        border: 'none',\n      },\n      borderless &&\n        focused && {\n          border: 'none',\n          selectors: {\n            ':after': {\n              border: 'none',\n            },\n          },\n        },\n      underlined && {\n        flex: '1 1 0px',\n        border: 'none',\n        textAlign: 'left',\n      },\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n\n      hasErrorMessage &&\n        !underlined && {\n          borderColor: semanticColors.errorText,\n          selectors: {\n            '&:hover': {\n              borderColor: semanticColors.errorText,\n            },\n          },\n        },\n      !hasLabel &&\n        required && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':before': {\n                  color: 'WindowText',\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    field: [\n      fonts.medium,\n      classNames.field,\n      normalize,\n      {\n        borderRadius: 0,\n        border: 'none',\n        background: 'none',\n        backgroundColor: 'transparent',\n        color: semanticColors.inputText,\n        padding: '0 8px',\n        width: '100%',\n        minWidth: 0,\n        textOverflow: 'ellipsis',\n        outline: 0,\n        selectors: {\n          '&:active, &:focus, &:hover': { outline: 0 },\n          '::-ms-clear': {\n            display: 'none',\n          },\n          [HighContrastSelector]: {\n            background: 'Window',\n            color: disabled ? 'GrayText' : 'WindowText',\n          },\n        },\n      },\n      getPlaceholderStyles(placeholderStyles),\n      multiline &&\n        !resizable && [\n          classNames.unresizable,\n          {\n            resize: 'none',\n          },\n        ],\n      multiline && {\n        minHeight: 'inherit',\n        lineHeight: 17,\n        flexGrow: 1,\n        paddingTop: 6,\n        paddingBottom: 6,\n        overflow: 'auto',\n        width: '100%',\n      },\n      multiline &&\n        autoAdjustHeight && {\n          overflow: 'hidden',\n        },\n      hasIcon &&\n        !hasRevealButton && {\n          paddingRight: 24,\n        },\n      multiline &&\n        hasIcon && {\n          paddingRight: 40,\n        },\n      disabled && [\n        {\n          backgroundColor: semanticColors.disabledBackground,\n          color: semanticColors.disabledText,\n          borderColor: semanticColors.disabledBackground,\n        },\n        getPlaceholderStyles(disabledPlaceholderStyles),\n      ],\n      underlined && {\n        textAlign: 'left',\n      },\n      focused &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingLeft: 11,\n              paddingRight: 11,\n            },\n          },\n        },\n      focused &&\n        multiline &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingTop: 4, // take into consideration the 2px increased border-width (not when borderless).\n            },\n          },\n        },\n      inputClassName,\n    ],\n    icon: [\n      multiline && {\n        paddingRight: 24,\n        alignItems: 'flex-end',\n      },\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        bottom: 6,\n        right: 8,\n        top: 'auto',\n        fontSize: IconFontSizes.medium,\n        lineHeight: 18,\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    description: [\n      classNames.description,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.xSmall.fontSize,\n      },\n    ],\n    errorMessage: [\n      classNames.errorMessage,\n      AnimationClassNames.slideDownIn20,\n      fonts.small,\n      {\n        color: semanticColors.errorText,\n        margin: 0,\n        paddingTop: 5,\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n    prefix: [classNames.prefix, fieldPrefixSuffix],\n    suffix: [classNames.suffix, fieldPrefixSuffix],\n    revealButton: [\n      classNames.revealButton,\n      'ms-Button',\n      'ms-Button--icon',\n      getFocusStyle(theme, { inset: 1 }),\n      {\n        height: 30,\n        width: 32,\n        border: 'none',\n        padding: '0px 4px',\n        backgroundColor: 'transparent',\n        color: semanticColors.link,\n        selectors: {\n          ':hover': {\n            outline: 0,\n            color: semanticColors.primaryButtonBackgroundHovered,\n            backgroundColor: semanticColors.buttonBackgroundHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n              },\n            },\n          },\n          ':focus': { outline: 0 },\n        },\n      },\n      hasIcon && {\n        marginRight: 28,\n      },\n    ],\n    revealSpan: {\n      display: 'flex',\n      height: '100%',\n      alignItems: 'center',\n    },\n    revealIcon: {\n      margin: '0px 4px',\n      pointerEvents: 'none',\n      bottom: 6,\n      right: 8,\n      top: 'auto',\n      fontSize: IconFontSizes.medium,\n      lineHeight: 18,\n    },\n    subComponentStyles: {\n      label: getLabelStyles(props),\n    },\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { TextFieldBase } from './TextField.base';\nimport { getStyles } from './TextField.styles';\nimport type { ITextFieldProps, ITextFieldStyles, ITextFieldStyleProps } from './TextField.types';\n\nexport const TextField: React.FunctionComponent<ITextFieldProps> = styled<\n  ITextFieldProps,\n  ITextFieldStyleProps,\n  ITextFieldStyles\n>(TextFieldBase, getStyles, undefined, {\n  scope: 'TextField',\n});\n\nexport type { ITextField } from './TextField.types';\n","import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\nimport { IReactProps } from './React.types';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\n// eslint-disable-next-line deprecation/deprecation\nexport interface IDelayedRenderProps extends IReactProps<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: getWindow() === undefined,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n"],"names":["__browserNeedsRevealButton","isIE11","win","getWindow","J","_a","navigator","userAgent","indexOf","getClassNames","classNamesFunction","y","COMPONENT_NAME","TextFieldBase","_super","props","_this","call","_textElement","react","createRef","_onFocus","ev","onFocus","setState","isFocused","validateOnFocusIn","_validate","value","_onBlur","onBlur","validateOnFocusOut","_onRenderLabel","label","required","labelStyles","_classNames","subComponentStyles","undefined","createElement","Label","_","htmlFor","_id","styles","disabled","id","_labelId","_onRenderDescription","description","className","_onRevealButtonClick","event","prevState","isRevealingPassword","_onInputChange","element","target","previousValue","_getValue","state","_lastChangeValue","_b","onChange","_isControlled","uncontrolledValue","initializeComponentRef","l","_async","Async","e","_fallbackId","getId","z","_descriptionId","_prefixId","_suffixId","_warnControlledUsage","defaultValue","String","errorMessage","_delayedValidate","debounce","deferredValidationTime","_lastValidation","tslib_es6","ZT","Object","defineProperty","prototype","componentDidMount","_adjustInputHeight","validateOnLoad","componentWillUnmount","dispose","getSnapshotBeforeUpdate","prevProps","selection","selectionStart","selectionEnd","componentDidUpdate","snapshot","start","end","multiline","focus","setSelectionRange","prevValue","_shouldValidateAllChanges","render","borderless","invalid","iconProps","inputClassName","underlined","prefix","resizable","suffix","theme","autoAdjustHeight","canRevealPassword","revealPasswordAriaLabel","type","onRenderPrefix","_onRenderPrefix","_c","onRenderSuffix","_onRenderSuffix","_d","onRenderLabel","_e","onRenderDescription","_f","_errorMessage","hasRevealButton","_browserNeedsRevealButton","isEdge","test","classNames","focused","hasLabel","hasErrorMessage","hasIcon","ref","elementRef","root","wrapper","fieldGroup","_renderTextArea","_renderInput","Icon","pi","icon","revealButton","onClick","revealSpan","revealIcon","iconName","_isDescriptionAvailable","role","DelayedRender","U","_renderErrorMessage","current","blur","select","setSelectionStart","setSelectionEnd","params","_hasWarnedNullValue","warn","Z","valueProp","style","paddingBottom","textAreaProps","properties","pq","FI","ariaLabelledBy","onInput","field","ariaLabel","readOnly","labelIds","push","inputProps","Gg","length","join","defaultRender","updatedInputProps","onRenderInput","_latestValidateValue","onGetErrorMessage","result","currentValidation_1","then","_notifyAfterValidate","onNotifyValidationResult","textField","height","scrollHeight","defaultProps","Component","globalClassNames","unresizable","active","TextField","styled","palette","fonts","semanticColors","effects","lib","Cn","fieldPrefixSuffix","background","disabledBackground","color","disabledText","inputPlaceholderText","display","alignItems","padding","lineHeight","whiteSpace","flexShrink","selectors","qJ","placeholderStyles","opacity","disabledPlaceholderStyles","medium","Fv","position","borderBottom","errorText","inputBorder","width","borderBottomColor","borderColor","xM","inputBorderHovered","$Y","inputFocusBorderAlt","border","borderRadius","roundedCorner2","inputBackground","cursor","flexDirection","minHeight","_g","flex","textAlign","backgroundColor","_h","content","top","right","inputText","minWidth","textOverflow","outline","_j","Sv","resize","flexGrow","paddingTop","overflow","paddingRight","_k","paddingLeft","_l","pointerEvents","bottom","fontSize","ld","bodySubtext","xSmall","k4","slideDownIn20","small","margin","GL","inset","link","primaryButtonBackgroundHovered","buttonBackgroundHovered","_m","marginRight","neutralTertiary","scope","isRendered","_dom_getWindow__WEBPACK_IMPORTED_MODULE_2__","tslib__WEBPACK_IMPORTED_MODULE_1__","delay","_timeoutId","window","setTimeout","clearTimeout","react__WEBPACK_IMPORTED_MODULE_0__","Children","only","children"],"sourceRoot":""}
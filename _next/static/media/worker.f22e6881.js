let SAMPLE_RATE=48e3;class SourceProcessor extends AudioWorkletProcessor{#e=[];#r=[];#t=0;#s=!1;constructor(){super(),this.port.onmessage=e=>{for(;this.#t>9600;){this.#e.shift();let e=this.#r.shift();this.#t-=e}let r=e.data,[t,s]=this.createSource(r);this.#e.push(t),this.#r.push(s),this.#t+=s,this.#t>4800&&(this.#s=!0)}}process(e,r){let t=r[0][0],s=r[0][1],o=t.length,n=0;this.#s&&this.#t<2400&&(this.#s=!1);let u=this.#s?1.02:1,c=0;for(;this.#e.length>0&&n<o;){let e=0|c,r=this.#e[0];[r,c,n]=this.copyChunk(c,u,r,t,s,o,n);let l=(0|c)-e;if(this.#t-=l,c-=l,r)return this.#e[0]=r,this.#r[0]-=l,!0;this.#e.shift(),this.#r.shift()}return n<o&&console.log(`[Audio] Buffer underflow, inserting silence: ${o-n} samples`),!0}}class Int16SourceProcessor extends SourceProcessor{createSource(e){let r=new Int16Array(e[0]);return[r,r.length/2]}copyChunk(e,r,t,s,o,n,u){let c=t.length,l=e<<1;for(;l<c;)if(s[u]=t[l]/32768,o[u]=t[l+1]/32768,e+=r,l=e<<1,(u+=1)===n)return[l<c?t.subarray(l):void 0,e,u];return[void 0,e,u]}}class Float32SourceProcessor extends SourceProcessor{createSource(e){let r=new Float32Array(e[0]);return[r,r.length/2]}copyChunk(e,r,t,s,o,n,u){let c=t.length,l=e<<1;for(;l<c;)if(s[u]=t[l],o[u]=t[l+1],e+=r,l=e<<1,(u+=1)===n)return[l<c?t.subarray(l):void 0,e,u];return[void 0,e,u]}}class Float32PlanerSourceProcessor extends SourceProcessor{createSource(e){let r=e.map(e=>new Float32Array(e));return[r,r[0].length]}copyChunk(e,r,t,s,o,n,u){let c=t[0],l=t[1],h=c.length,a=0|e;for(;a<h;)if(s[u]=c[a],o[u]=l[a],e+=r,a=0|e,(u+=1)===n)return[a<h?t.map(e=>e.subarray(a)):void 0,e,u];return[void 0,e,u]}}registerProcessor("int16-source-processor",Int16SourceProcessor),registerProcessor("float32-source-processor",Float32SourceProcessor),registerProcessor("float32-planer-source-processor",Float32PlanerSourceProcessor);export{};